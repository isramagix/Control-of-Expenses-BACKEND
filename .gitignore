# ========================================
# üîê Variables de entorno y archivos sensibles
# ========================================
.env
.env.local
.env.development
.env.production
.env.test
*.env

# ========================================
# üêç Python
# ========================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# ========================================
# üóÉÔ∏è Base de datos
# ========================================
*.db
*.sqlite
*.sqlite3
*.db-journal

# PostgreSQL
*.pgsql
*.sql.gz

# Archivos de backup
*.backup
*.bak
*.old

# ========================================
# üìù Logs y archivos temporales
# ========================================
*.log
logs/
log/
temp/
tmp/
*.tmp
*.temp
*.swp
*.swo
*~

# ========================================
# üîß IDEs y editores
# ========================================
# VSCode
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# PyCharm
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ========================================
# üíª Sistema operativo
# ========================================
# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ========================================
# üì¶ Dependencias y paquetes
# ========================================
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# ========================================
# ‚òÅÔ∏è Servicios en la nube
# ========================================
# AWS
.aws/

# Google Cloud
gcloud/
.gcp/

# ========================================
# üîí Certificados y llaves
# ========================================
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx
*.jks
id_rsa
id_dsa
id_ecdsa
id_ed25519
*.pub

# ========================================
# üìä Datos de prueba y archivos grandes
# ========================================
*.csv
*.xlsx
*.json.gz
*.tar.gz
*.zip
*.rar
*.7z
data/
datasets/
uploads/
media/

# ========================================
# üöÄ Despliegue y producci√≥n
# ========================================
# Docker
.dockerignore
docker-compose.override.yml

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Kubernetes
k8s-secrets/
*.kubeconfig

# ========================================
# üìã Archivos espec√≠ficos del proyecto
# ========================================
# Archivos de configuraci√≥n locales
config.local.py
settings.local.py
local_settings.py

# Archivos temporales de desarrollo
dev_*.py
test_*.temp
scratch.*
playground.*

# Archivos de migraci√≥n temporales (si usas Alembic)
# migrations/versions/*.py  # Descomenta si quieres ignorar migraciones espec√≠ficas

# Scripts de desarrollo temporal
drop_tables.py
reset_db.py
seed_data.py